version: 2.1

postgres: &postgres
  - image: circleci/postgres:9.6-alpine
    environment:
      POSTGRES_USER: postgres

branch_filters: &branch_filters
  filters:
    branches:
      ignore:
        - gh-pages
        - metakitty

workflows:
  version: 2
  build:
    jobs:
    - ruby_2_5_5_content:
        <<: *branch_filters
    - ruby_2_6_2_content:
        <<: *branch_filters
    - ruby_2_5_5_exclude_content:
        <<: *branch_filters
    - ruby_2_6_2_exclude_content:
        <<: *branch_filters
    - ruby_2_5_5_content_remote_db:
        <<: *branch_filters
    - ruby_2_6_2_content_remote_db:
        <<: *branch_filters
    - ruby_2_5_5_exclude_content_remote_db:
        <<: *branch_filters
    - ruby_2_6_2_exclude_content_remote_db:
        <<: *branch_filters
    - ruby_2_5_5_docker:
        <<: *branch_filters

commands: 
  build_steps:
    parameters:
      before_install:
        type: steps
        default:
          - run:
              name: Before Install
              command: |
                # Install System Dependencies                
                sudo apt update 
                sudo apt install libpcap-dev graphviz
                
                bundle config without coverage development pcap
                echo 'gem: --no-ri --no-rdoc' > ~/.gemrc
                rake --version
                # Fail build if msftidy is not successful
                ln -sf ../../tools/dev/pre-commit-hook.rb ./.git/hooks/post-merge
                ls -la ./.git/hooks
                ./.git/hooks/post-merge
                # Update the bundler
                sudo gem update --system
                gem install bundler                
                bundle install --path vendor/bundle
      before_script:
        type: steps
        default:
          - run:
              name: Before Script
              command: |
                cp config/database.yml.travis config/database.yml
                bundle exec rake --version
                bundle exec rake db:create
                bundle exec rake db:migrate
                # fail build if db/schema.rb update is not committed
                git diff --exit-code db/schema.rb
    steps:
        - checkout
        - restore_cache:
            key: bundle-cache-{{ .Environment.CIRCLE_JOB }}
        - steps: << parameters.before_install >>
        - save_cache:
            key: bundle-cache-{{ .Environment.CIRCLE_JOB }}
            paths: 
              - vendor/bundle
        - steps: << parameters.before_script >>
        - run:
            name: Script
            command: |                
                echo "${CMD}"
                # we need travis_wait because the Docker build job can take longer than 10 minutes
                #- if [[ "${DOCKER}" == "true" ]]; then echo "Starting Docker build job"; travis_wait 40 "${CMD}"; else bash -c "${CMD}"; fi
                # docker_wait is currently broken on travis-ci, so let's just run CMD directly for now
                bash -c "${CMD}"

jobs:
  ruby_2_5_5_content:
    docker:      
      - image: circleci/ruby:2.5.5-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag content"'
      - <<: *postgres
    steps:
      - build_steps
      
  ruby_2_5_5_exclude_content:
    docker:      
      - image: circleci/ruby:2.5.5-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag ~content"'
          RAILS_ENV: test
      - <<: *postgres
    steps:
      - build_steps
      
  ruby_2_5_5_content_remote_db:
    docker:      
      - image: circleci/ruby:2.5.5-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag content" REMOTE_DB=1'
      - <<: *postgres
    steps:
      - build_steps
      
  ruby_2_5_5_exclude_content_remote_db:
    docker:      
      - image: circleci/ruby:2.5.5-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag ~content" REMOTE_DB=1'
      - <<: *postgres
    steps:
      - build_steps
      
  ruby_2_5_5_docker:
    docker:      
      - image: circleci/ruby:2.5.5-stretch
        environment:
          CMD: 'docker-compose build'
          DOCKER: 'true'
      - <<: *postgres
    steps:
      - build_steps:
          before_install:
            - setup_remote_docker
          before_script: []
      
  ruby_2_6_2_content:
    docker:      
      - image: circleci/ruby:2.6.2-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag content"'
      - <<: *postgres
    steps:
      - build_steps
      
  ruby_2_6_2_exclude_content:
    docker:      
      - image: circleci/ruby:2.6.2-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag ~content"'
          RAILS_ENV: test
      - <<: *postgres
    steps:
      - build_steps
      
  ruby_2_6_2_content_remote_db:
    docker:      
      - image: circleci/ruby:2.6.2-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag content" REMOTE_DB=1'
      - <<: *postgres
    steps:
      - build_steps
      
  ruby_2_6_2_exclude_content_remote_db:
    docker:      
      - image: circleci/ruby:2.6.2-stretch
        environment:
          CMD: 'bundle exec rake rspec-rerun:spec SPEC_OPTS="--tag ~content" REMOTE_DB=1'
      - <<: *postgres
    steps:
      - build_steps      
